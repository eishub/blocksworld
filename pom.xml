<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eishub</groupId>
	<artifactId>blocksworld</artifactId>
	<version>1.2.0</version>
	<name>blocksworld</name>
	<description>The classic Blocks World from AI with an interactive user interface.</description>
	<url>http://github.com/eishub/blocksworld/</url>

	<licenses>
		<license>
			<name>GNU General Public License (GPL)</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
		</license>
	</licenses>

	<organization>
		<name>eishub</name>
		<url>http://github.com/eishub</url>
	</organization>

	<properties>
		<!-- main class reference elements for manifest -->
		<main.class>BWEnvironment</main.class>
		<main.class.package>eisinterface</main.class.package>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<github.global.server>github</github.global.server>
	</properties>

	<repositories>
		<repository>
			<id>eishub-mvn-repo</id>
			<url>https://raw.github.com/eishub/mvn-repo/master</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>java8-doclint-disabled</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<javadoc.opts>-Xdoclint:none</javadoc.opts>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>eishub</groupId>
			<artifactId>eis</artifactId>
			<version>0.6.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<scm>
		<!-- used by the buildnumber plugin -->
		<connection>scm:git:https://github.com/eishub/blocksworld.git</connection>
	</scm>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${main.class.package}.${main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<!-- Yes I know: http://blog.sonatype.com/2010/01/how-to-create-two-jars-from-one-project-and-why-you-shouldnt/ -->
				<!-- Right now, it's just not worth the effort and a pity to mess up 
					the directory structure. -->
				<!-- Perhaps we'll get back to this later. -->
				<executions>
					<!-- Generate the blocksworld.jar -->
					<execution>
						<id>blocksworld</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>${main.class.package}.${main.class}</mainClass>
								</manifest>
							</archive>
							<classifier>blocksworld</classifier>
							<excludes>
								<exclude>**/worldgenerator*</exclude>
							</excludes>
						</configuration>
					</execution>
					<!-- Generate the worldgenerator.jar -->
					<execution>
						<id>worldgenerator</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>worldgenerator.RandomWorldGenerator</mainClass>
								</manifest>
							</archive>
							<classifier>worldgenerator</classifier>
							<excludes>
								<exclude>**/eishub</exclude>
								<exclude>**/environment</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<additionalparam>${javadoc.opts}</additionalparam>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- See: http://akquinet.github.io/maven-latex-plugin/ -->
				<groupId>de.akquinet.jbosscc.latex</groupId>
				<artifactId>maven-latex-plugin</artifactId>
				<version>1.2</version>
				<inherited>false</inherited>
				<configuration>
					<settings>
						<!-- all tex main documents in this folder (including subfolders) will 
							be processed -->
						<texDirectory>${basedir}/src/main/latex</texDirectory>
						<!-- the generated artifacts will be copied to ${project.build.directory}/doc -->
						<!-- outputDirectory>doc</outputDirectory -->
					</settings>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>latex</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Create documentation zip file. Zip is more convenient than jar as 
				it does not add extra directories -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/latex/distribution.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>



			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.10</version>
				<configuration>
					<message>Maven artifacts for ${project.name} environment version
						${project.version}</message>	<!-- git commit message -->
					<merge>true</merge>
					<noJekyll>true</noJekyll>									<!-- disable webpage processing -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
					<branch>refs/heads/master</branch>							<!-- remote branch name -->
					<includes>
						<include>**/*</include>
					</includes>
					<repositoryName>mvn-repo</repositoryName>					<!-- github repo name -->
					<repositoryOwner>eishub</repositoryOwner>					<!-- github organization -->
					<dryrun>true</dryrun>
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>

</project>